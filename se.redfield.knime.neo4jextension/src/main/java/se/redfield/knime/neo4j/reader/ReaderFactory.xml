<?xml version="1.0" encoding="utf-8"?>
<knimeNode type="Source" icon="/icons/reader.png" xmlns="http://knime.org/node/v4.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>Memgraph Reader</name>
	
	<shortDescription>Memgraph Reader.</shortDescription>

	<fullDescription>
		<intro>
			The node allows user to run queries for extracting data from Memgraph, any queries that change the state of DB will be rolled back. There are three modes available:
	    <ul>
	    	<li>Script â€“ active when there is no input table connected. User can create a Cypher script with injections of labels for nodes and relationships, and available server functions to extract data from the database. Schema is fetched with functions db.labels, db.relationshipTypes, dbms.functions. The output data will be automatically matched to Knime table compatible types if possible, otherwise JSON columns will be produced.</li>
	    	<li>Query from table - active if the table is connected, the user can select the string column that contains Cypher queries.</li>
	    	<li>Batch script - active if the table is connected, the user can provide a Cypher batch script with references to the input table columns as the parameters for the query. The capabilities are similar to Script mode.</li>
	    </ul>
	   	</intro>

	   	<tab name="Script">
			<option name="Use JSON output">if active the result will be returned as a JSON column. Otherwise the node will try to return a Knime table with best match for Knime types.</option>
			<option name="Stop on query failure">if active the node will return an error and stop execution in case the query was not successfully executed. Otherwise node will produce an empty table and a warning message.</option>
			<option name="Script body">the text box, where use can put Cypher query with nodes, relationship, function and flow variables injections.</option>
	   	</tab>
	   	<tab name="Query from table">
	   		<option name="Column with query">queries from the selected string column will be executed. Results will be returned as a JSON column.</option>
	   		<option name="Stop on query failure">if active the node will return an error and stop execution in case the query was not successfully executed. Otherwise node will produce an empty table and a warning message.</option>
	   	</tab>
	   	<tab name="Batch script">
	   		<option name="Use batch query">activates Batch query mode and deactivates Query from table mode.</option>
	   		<option name="Name for batch parameter">defines a batch variable name that can be used with UNWIND clause.</option>
	   		<option name="Batch Patterns">several examples with Cypher batch queries with wildcards, can be inserted to script body with double-click.</option>
	   		<option name="Column List">list of columns of input table, can be can be inserted to script body with double-click.</option>
	   	</tab>
	</fullDescription>

	<ports>
		<inPort index="0" name="Memgraph connection">Memgraph connection</inPort>
		<dynInPort insert-before="0" name="Input table" group-identifier="Input table"> 
			Table with the Cypher query
		</dynInPort>
	    <outPort index="0" name="Memgraph output">Table/JSON response</outPort>
		<outPort index="1" name="Memgraph connection">Memgraph connection</outPort>
	</ports>
</knimeNode>