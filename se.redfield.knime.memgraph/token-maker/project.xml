<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<TokenMakerDefinition>
  <general>
    <package>se.redfield.knime.neo4j.ui.editor</package>
    <className>CypherTokenMaker</className>
    <extendedClass>AbstractJFlexTokenMaker</extendedClass>
    <classComment/>
    <ignoreCase>true</ignoreCase>
    <booleanLiterals>true</booleanLiterals>
  </general>
  <comments>
    <lineComments enabled="true" start="//"/>
    <multiLineComments enabled="false" end="" start=""/>
    <docComments enabled="false" end="" start=""/>
  </comments>
  <keywords>
    <keyword>ADD</keyword>
    <keyword>ALL</keyword>
    <keyword>AND</keyword>
    <keyword>AS</keyword>
    <keyword>ASC</keyword>
    <keyword>ASCENDING</keyword>
    <keyword>ASSERT</keyword>
    <keyword>BY</keyword>
    <keyword>CALL</keyword>
    <keyword>CASE</keyword>
    <keyword>CONSTRAINT</keyword>
    <keyword>CONTAINS</keyword>
    <keyword>COUNT</keyword>
    <keyword>CREATE</keyword>
    <keyword>CREATE</keyword>
    <keyword>CSV</keyword>
    <keyword>DELETE</keyword>
    <keyword>DESC</keyword>
    <keyword>DESCENDING</keyword>
    <keyword>DETACH</keyword>
    <keyword>DISTINCT</keyword>
    <keyword>DO</keyword>
    <keyword>DROP</keyword>
    <keyword>ELSE</keyword>
    <keyword>END</keyword>
    <keyword>ENDS</keyword>
    <keyword>EXISTS</keyword>
    <keyword>EXISTS</keyword>
    <keyword>FOR</keyword>
    <keyword>FOREACH</keyword>
    <keyword>IN</keyword>
    <keyword>INDEX</keyword>
    <keyword>INDEX</keyword>
    <keyword>IS</keyword>
    <keyword>JOIN</keyword>
    <keyword>KEY</keyword>
    <keyword>LIMIT</keyword>
    <keyword>LOAD</keyword>
    <keyword>MANDATORY</keyword>
    <keyword>MATCH</keyword>
    <keyword>MERGE</keyword>
    <keyword>NODE</keyword>
    <keyword>NOT</keyword>
    <keyword>OF</keyword>
    <keyword>ON</keyword>
    <keyword>OPTIONAL</keyword>
    <keyword>OR</keyword>
    <keyword>ORDER</keyword>
    <keyword>REMOVE</keyword>
    <keyword>REQUIRE</keyword>
    <keyword>RETURN</keyword>
    <keyword>SCALAR</keyword>
    <keyword>SCAN</keyword>
    <keyword>SET</keyword>
    <keyword>SKIP</keyword>
    <keyword>START</keyword>
    <keyword>STARTS</keyword>
    <keyword>THEN</keyword>
    <keyword>UNION</keyword>
    <keyword>UNIQUE</keyword>
    <keyword>UNWIND</keyword>
    <keyword>USING</keyword>
    <keyword>WHEN</keyword>
    <keyword>WHERE</keyword>
    <keyword>WITH</keyword>
    <keyword>XOR</keyword>
    <keyword>YIELD</keyword>
    <keyword>false</keyword>
    <keyword>null</keyword>
    <keyword>true</keyword>
  </keywords>
  <keywords2/>
  <dataTypes>
    <dataType>ANY</dataType>
    <dataType>ANY VALUE</dataType>
    <dataType>ARRAY</dataType>
    <dataType>BOOL</dataType>
    <dataType>BOOLEAN</dataType>
    <dataType>DATE</dataType>
    <dataType>DURATION</dataType>
    <dataType>EDGE</dataType>
    <dataType>FLOAT</dataType>
    <dataType>INT</dataType>
    <dataType>INTEGER</dataType>
    <dataType>LIST</dataType>
    <dataType>LOCAL DATETIME</dataType>
    <dataType>LOCAL TIME</dataType>
    <dataType>MAP</dataType>
    <dataType>NODE</dataType>
    <dataType>NOTHING</dataType>
    <dataType>NULL</dataType>
    <dataType>PATH</dataType>
    <dataType>POINT</dataType>
    <dataType>PROPERTY VALUE</dataType>
    <dataType>RELATIONSHIP</dataType>
    <dataType>SIGNED INTEGER</dataType>
    <dataType>STRING</dataType>
    <dataType>TIME WITH TIMEZONE</dataType>
    <dataType>TIME WITHOUT TIMEZONE</dataType>
    <dataType>TIMESTAMP WITH TIMEZONE</dataType>
    <dataType>TIMESTAMP WITHOUT TIMEZONE</dataType>
    <dataType>VARCHAR</dataType>
    <dataType>VERTEX</dataType>
    <dataType>ZONED DATETIME</dataType>
    <dataType>ZONED TIME</dataType>
  </dataTypes>
  <functions>
    <function>abs</function>
    <function>acos</function>
    <function>all</function>
    <function>any</function>
    <function>asin</function>
    <function>atan</function>
    <function>atan2</function>
    <function>avg</function>
    <function>ceil</function>
    <function>char_length</function>
    <function>character_length</function>
    <function>coalesce</function>
    <function>collect</function>
    <function>cos</function>
    <function>cot</function>
    <function>count</function>
    <function>date</function>
    <function>date.realtime</function>
    <function>date.statement</function>
    <function>date.transaction</function>
    <function>date.truncate</function>
    <function>datetime</function>
    <function>datetime.fromepoch</function>
    <function>datetime.fromepochmillis</function>
    <function>datetime.realtime</function>
    <function>datetime.statement</function>
    <function>datetime.transaction</function>
    <function>datetime.truncate</function>
    <function>db.nameFromElementId</function>
    <function>degrees</function>
    <function>duration</function>
    <function>duration.between</function>
    <function>duration.inDays</function>
    <function>duration.inMonths</function>
    <function>duration.inSeconds</function>
    <function>e</function>
    <function>endNode</function>
    <function>exists</function>
    <function>exp</function>
    <function>file</function>
    <function>floor</function>
    <function>graph.byElementId</function>
    <function>graph.byName</function>
    <function>graph.names</function>
    <function>graph.propertiesByName</function>
    <function>haversin</function>
    <function>head</function>
    <function>id</function>
    <function>isEmpty</function>
    <function>isNaN</function>
    <function>keys</function>
    <function>labels</function>
    <function>last</function>
    <function>left</function>
    <function>length</function>
    <function>linenumber</function>
    <function>localdatetime</function>
    <function>localdatetime.realtime</function>
    <function>localdatetime.statement</function>
    <function>localdatetime.transaction</function>
    <function>localdatetime.truncate</function>
    <function>localtime</function>
    <function>localtime.realtime</function>
    <function>localtime.statement</function>
    <function>localtime.transaction</function>
    <function>localtime.truncate</function>
    <function>log</function>
    <function>log10</function>
    <function>ltrim</function>
    <function>max</function>
    <function>min</function>
    <function>nodes</function>
    <function>none</function>
    <function>nullIf</function>
    <function>percentileCont</function>
    <function>percentileDisc</function>
    <function>pi</function>
    <function>point</function>
    <function>point.distance</function>
    <function>point.withinBBox</function>
    <function>properties</function>
    <function>radians</function>
    <function>rand</function>
    <function>randomUUID</function>
    <function>range</function>
    <function>reduce</function>
    <function>relationships</function>
    <function>replace</function>
    <function>reverse</function>
    <function>right</function>
    <function>round</function>
    <function>rtrim</function>
    <function>sign</function>
    <function>sin</function>
    <function>single</function>
    <function>size</function>
    <function>split</function>
    <function>sqrt</function>
    <function>startNode</function>
    <function>stdev</function>
    <function>stdevp</function>
    <function>substring</function>
    <function>sum</function>
    <function>tail</function>
    <function>tan</function>
    <function>time</function>
    <function>time.realtime</function>
    <function>time.statement</function>
    <function>time.transaction</function>
    <function>time.truncate</function>
    <function>toBoolean</function>
    <function>toBooleanList</function>
    <function>toBooleanOrNull</function>
    <function>toFloat</function>
    <function>toFloatList</function>
    <function>toFloatOrNull</function>
    <function>toInteger</function>
    <function>toIntegerList</function>
    <function>toIntegerOrNull</function>
    <function>toLower</function>
    <function>toString</function>
    <function>toStringList</function>
    <function>toStringOrNull</function>
    <function>toUpper</function>
    <function>trim</function>
    <function>type</function>
    <function>valueType</function>
  </functions>
  <numbers>
    <hexLiteral>0x{HexDigit}+</hexLiteral>
    <intLiteral>{Digit}+</intLiteral>
    <floatLiteral>({Digit}+)("."{Digit}+)?(e[+-]?{Digit}+)? | ({Digit}+)?("."{Digit}+)(e[+-]?{Digit}+)?</floatLiteral>
  </numbers>
  <stringLiterals enabled="true" multiLine="false"/>
  <charLiterals enabled="true" multiLine="false"/>
  <backtickLiterals enabled="false"/>
  <operators>
    <operator>%</operator>
    <operator>*</operator>
    <operator>+</operator>
    <operator>-</operator>
    <operator>/</operator>
    <operator>&lt;</operator>
    <operator>&lt;=</operator>
    <operator>&lt;&gt;</operator>
    <operator>=</operator>
    <operator>=~</operator>
    <operator>&gt;</operator>
    <operator>&gt;=</operator>
    <operator>AND</operator>
    <operator>CONTAINS</operator>
    <operator>DISTINCT</operator>
    <operator>ENDS WITH</operator>
    <operator>IS</operator>
    <operator>NOT</operator>
    <operator>OR</operator>
    <operator>STARTS WITH</operator>
    <operator>XOR</operator>
    <operator>^</operator>
  </operators>
</TokenMakerDefinition>
